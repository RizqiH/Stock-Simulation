# Test Dockerfile for running tests in containerized environment
FROM golang:1.24-alpine AS test-base

# Install necessary packages for testing
RUN apk add --no-cache \
    git \
    make \
    curl \
    docker \
    docker-compose \
    bash \
    mysql-client \
    redis

# Set working directory
WORKDIR /app

# Copy go mod files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Install testing tools
RUN go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest && \
    go install github.com/securecodewarrior/gosec/v2/cmd/gosec@latest && \
    go install golang.org/x/vuln/cmd/govulncheck@latest && \
    go install github.com/onsi/ginkgo/v2/ginkgo@latest && \
    go install github.com/golang/mock/mockgen@latest

# Copy source code
COPY . .

# Create test results directory
RUN mkdir -p /app/test-results

# Default command for running tests
CMD ["make", "test-all"]